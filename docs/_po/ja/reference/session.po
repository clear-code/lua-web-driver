msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: web-driver.Session\n"
"---"
msgstr ""

msgid "# `web-driver.Session` class"
msgstr "# `web-driver.Session` クラス"

msgid "## Summary"
msgstr "## 概要"

msgid "It's a class for handling WebDriver's session."
msgstr "WebDriverのセッションを制御するクラスです。"

msgid "It has methods of the following modules:"
msgstr "以下のモジュールのメソッドを持ちます："

msgid ""
"  * [`web-driver.Element`][element]: The class for handling web elements.\n"
"  * [`web-driver.ElementSet`][elementset]: The class for multiple elements.\n"
"  * [`web-driver.Searchable`][searchable]: Provides element search related met"
"hods."
msgstr ""
"  * [`web-driver.Element`][element]: 要素の制御をするクラスです。\n"
"  * [`web-driver.ElementSet`][elementset]: 複数の要素を制御するクラスです。\n"
"  * [`web-driver.Searchable`][searchable]: 要素の検索関連のメソッドを提供します。"

msgid "It means that you can use methods in the modules."
msgstr "上述のモジュールのメソッドを使えます。"

msgid "## Instance methods"
msgstr "## インスタンスメソッド"

msgid "### `navigate_to(url) -> void` {#navigate-to}"
msgstr ""

msgid "This method moves to the website of the specified the URL."
msgstr "このメソッドは指定したURLのWebサイトへ移動します。"

msgid "`url`: Specify the URL of the website you want to move."
msgstr "`url`: 移動したいWebサイトのURLを指定します。"

msgid "Example:"
msgstr "例:"

msgid ""
"```lua\n"
"local web_driver = require(\"web-driver\")\n"
"local driver = web_driver.Firefox.new()"
msgstr ""

msgid ""
"local URL =\n"
"  \"https://clear-code.gitlab.io/lua-web-driver/sample/\""
msgstr ""

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"end)\n"
"```"
msgstr ""

msgid "### `url() -> string` {#url}"
msgstr ""

msgid "It returns the URL of current the website as string."
msgstr "現在のWebサイトのURLを文字列として返します。"

msgid "local URL = \"https://clear-code.gitlab.io/lua-web-driver/sample/\""
msgstr ""

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  print(session:url())\n"
"  -- https://clear-code.gitlab.io/lua-web-driver/sample/\n"
"end)\n"
"```"
msgstr ""

msgid "### `forward() -> nil` {#forward}"
msgstr ""

msgid ""
"This method traverse one step forwards in the history from the current website"
"."
msgstr "現在のWebサイトから履歴を1つ先へ辿ります。"

msgid ""
"local URL1 = \"https://clear-code.gitlab.io/lua-web-driver/sample/\"\n"
"local URL2 = \"https://clear-code.gitlab.io/lua-web-driver/sample/button.html\""
msgstr ""

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL1)\n"
"  session:navigate_to(URL2)\n"
"  print(session:url())\n"
"  --https://clear-code.gitlab.io/lua-web-driver/sample/button.html\n"
"  session:back()\n"
"  print(session:url())\n"
"  --https://clear-code.gitlab.io/lua-web-driver/sample/\n"
"  session:forward()\n"
"  print(session:url())\n"
"  --https://clear-code.gitlab.io/lua-web-driver/sample/button.html\n"
"end)\n"
"```"
msgstr ""

msgid "### `back() -> nil` {#back}"
msgstr ""

msgid "This method traverse one step backs in the history from the current website."
msgstr "現在のWebサイトから履歴を1つ後ろへ辿ります。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL1)\n"
"  session:navigate_to(URL2)\n"
"  print(session:url())\n"
"  --https://clear-code.gitlab.io/lua-web-driver/sample/button.html\n"
"  session:back()\n"
"  print(session:url())\n"
"  --https://clear-code.gitlab.io/lua-web-driver/sample/\n"
"end)\n"
"```"
msgstr ""

msgid "### `refresh() -> nil` {#refresh}"
msgstr ""

msgid "This method reloads the current website."
msgstr "現在のWebサイトをリロードします。"

msgid ""
"When this method is executed, unsaved values is cleared and updated real-time "
"information."
msgstr "このメソッドを実行した時に、保存していない値はクリアされ、リアルタイムの情報は更新されます。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local elements = session:css_select('input[name=name]')\n"
"  elements:send_keys(\"This is test\")\n"
"  print(elements[1].value)\n"
"  -- This is test\n"
"  session:refresh()\n"
"  local refreshed_elements = session:css_select('input[name=name]')\n"
"  print(refreshed_elements[1].value)\n"
"  -- \"\"\n"
"end)\n"
"```"
msgstr ""

msgid "### `title() -> string` {#title}"
msgstr ""

msgid "This method gets title of the current website."
msgstr "現在のWebサイトのタイトルを取得します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  print(session:title())\n"
"  -- This is test html\n"
"end)\n"
"```"
msgstr ""

msgid "### `window_handle() -> string` {#window-handle}"
msgstr ""

msgid "This method gets the window handle of the current window."
msgstr "現在のウインドウのウインドウハンドルを取得します。"

msgid "It returns the window handle as string."
msgstr "文字列としてウインドウハンドルを返します。"

msgid ""
"The window handles is used to switch multiple windows and identify the window "
"also."
msgstr "このウインドウハンドルは、複数のウインドウを切り替えたり、ウインドウを特定したりするのに使います。"

msgid "local URL = \"https://clear-code.gitlab.io/lua-web-driver/sample/window.html\""
msgstr ""

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local next_handle = session:window_handles()[2]\n"
"  print(session:window_handle())\n"
"  -- 2147483649\n"
"  session:switch_to_window(next_handle)\n"
"  print(session:window_handle())\n"
"  -- 2147483656\n"
"end)\n"
"```"
msgstr ""

msgid ""
"### `close_window() -> {remaining_window_handle1, remaining_window_handle2, .."
".}` {#close-window}"
msgstr ""

msgid ""
"This method close the current window. It returns handle of remaining window as"
" a table."
msgstr "現在のウインドウをクローズします。残っているウインドウのハンドルをテーブルとして返します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  remaining_handles = session:close_window()\n"
"  session:switch_to_window(remaining_handles[1])\n"
"end)\n"
"```"
msgstr ""

msgid "### `switch_to_window(handle) -> nil` {#switch-to-window}"
msgstr ""

msgid "This method is a switch to the window of the specify handle."
msgstr "指定したハンドルのウインドへ切り替えます。"

msgid ""
"### `window_handles() -> {window_handle1, window_handle2, ...}` {#window-handl"
"es}"
msgstr ""

msgid "This method gets the window handles of the current session."
msgstr "現在のセッションのウインドウハンドルを取得します。"

msgid "It returns the window handles as table."
msgstr "テーブルとして、ウインドウハンドルを返します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local window_handles = session:window_handles()\n"
"  for _,handle in pairs(window_handles) do\n"
"    print(handle)\n"
"    --2147483649\n"
"    --2147483656\n"
"    --2147483653\n"
"  end\n"
"  print(session:window_handle())\n"
"  --2147483649\n"
"  session:switch_to_window(window_handles[2])\n"
"  --2147483656\n"
"  print(session:window_handle())\n"
"```"
msgstr ""

msgid "### `maximize_window() -> void` {#maximize-windows}"
msgstr ""

msgid "This method maximizes the current window."
msgstr "現在のウインドウを最大化します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  session:set_window_rect({ height = 500, width = 500, x = 0, y = 0 })\n"
"  for k,v in pairs(session:window_rect()) do\n"
"    print(k,v)\n"
"  end\n"
"  -- y\t0\n"
"  -- width\t500\n"
"  -- height\t500\n"
"  -- x\t0\n"
"  session:maximize_window()\n"
"  for k,v in pairs(session:window_rect()) do\n"
"    print(k,v)\n"
"  end\n"
"  -- y\t0\n"
"  -- width\t1366\n"
"  -- height\t768\n"
"  -- x\t0\n"
"end)\n"
"```"
msgstr ""

msgid "### `minimize_window() -> void` {#minimize-window}"
msgstr ""

msgid "This method minimizes the current window."
msgstr "現在のウインドウを最小化します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  session:set_window_rect({ height = 500, width = 500, x = 0, y = 0 })\n"
"  for k,v in pairs(session:window_rect()) do\n"
"    print(k,v)\n"
"  end\n"
"  -- y\t0\n"
"  -- width\t500\n"
"  -- height\t500\n"
"  -- x\t0\n"
"  session:minimize_window()\n"
"  for k,v in pairs(session:window_rect()) do\n"
"    print(k,v)\n"
"  end\n"
"  -- y\t0\n"
"  -- width\t0\n"
"  -- height\t0\n"
"  -- x\t0\n"
"end)\n"
"```"
msgstr ""

msgid ""
"### `fullscreen_window() -> {height=xxxx, width=xxxx, x=xxxx, y=xxxx}` {#fulls"
"creen-window}"
msgstr ""

msgid ""
"This method is to fullscreen the current window.\n"
"It returns window size and position at the full screen as a table."
msgstr "現在のウインドウをフルスクリーンにします。フルスクリーン時のウインドウのサイズと位置をテーブルとして返します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  session:set_window_rect({ height = 500, width = 500, x = 0, y = 0 })\n"
"  for k,v in pairs(session:window_rect()) do\n"
"    print(k,v)\n"
"  end\n"
"  -- y\t0\n"
"  -- width\t500\n"
"  -- height\t500\n"
"  -- x\t0\n"
"  session:fullscreen_window()\n"
"  for k,v in pairs(session:window_rect()) do\n"
"    print(k,v)\n"
"  end\n"
"  -- y\t0\n"
"  -- width\t1366\n"
"  -- height\t768\n"
"  -- x\t0\n"
"end)\n"
"```"
msgstr ""

msgid ""
"### `window_rect() -> {height=xxxx, width=xxxx, x=xxxx, y=xxxx}` {#window-rect"
"}"
msgstr ""

msgid ""
"This method gets window size and position of a current window.\n"
"It return window size and position of the current window as a table."
msgstr "現在のウインドウのサイズと位置を取得します。現在のウインドウのサイズと位置をテーブルとして返します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  session:set_window_rect({ height = 500, width = 500, x = 0, y = 0 })\n"
"  for k,v in pairs(session:window_rect()) do\n"
"    print(k,v)\n"
"  end\n"
"  -- y\t0\n"
"  -- width\t500\n"
"  -- height\t500\n"
"  -- x\t0\n"
"end)\n"
"```"
msgstr ""

msgid "### `set_window_rect(rect) -> table` {#set-window-rect}"
msgstr ""

msgid "This method sets window rectangle of the current window."
msgstr "現在のウインドウのサイズを設定します。"

msgid "### `switch_to_frame(id) -> nil` {#switch-to-frame}"
msgstr ""

msgid "`id`: Specify id of a frame of want to switch as a number."
msgstr "`id`: 切り替えたいフレームのIDを数字として指定します。"

msgid "This method switch to the frame of the specified frame id."
msgstr "指定したIDのフレームへ切り替えます。"

msgid "local URL = \"https://clear-code.gitlab.io/lua-web-driver/sample/frame.html\""
msgstr ""

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  print(session:title())\n"
"  -- This is parent frame\n"
"  session:switch_to_frame(0)\n"
"  local element = session:find_element(\"css selector\", \"p\")\n"
"  print(element:text())\n"
"  -- 1\n"
"  print(session:title())\n"
"  -- This is test html 1\n"
"end)\n"
"```"
msgstr ""

msgid "### `switch_to_parent_frame() -> ` {#switch-to-parent-frame}"
msgstr ""

msgid "This method switch to the parent frame of the current frame."
msgstr "現在のフレームの親フレームに切り替えます。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  print(session:title())\n"
"  -- This is parent frame\n"
"  session:switch_to_frame(0)\n"
"  local element = session:find_element(\"css selector\", \"p\")\n"
"  print(element:text())\n"
"  -- 1\n"
"  print(session:title())\n"
"  -- This is test html 1\n"
"  session:switch_to_parent_frame()\n"
"  element = session:find_element(\"css selector\", \"p\")\n"
"  print(element:text())\n"
"  -- parent\n"
"  print(session:title())\n"
"  -- This is parent frame\n"
"end)\n"
"```"
msgstr ""

msgid "### `find_element(strategy, finder) -> web-driver.Element` {#find-element}"
msgstr ""

msgid "This method is find web element by some retrieval methods."
msgstr "いくつかの検索方法を使って要素を見つけます。"

msgid ""
"`strategy`: Specify how to search the element. You can set the argument as bel"
"ow."
msgstr "`strategy`: 要素を検索する方法を指定します。引数を以下のように設定できます。"

msgid ""
"  * `css selector`: Serch the element by CSS selector.\n"
"  * `link text`: Serach the element by Link text selector.\n"
"  * `partical link text`: Search the element by Partical link text selector.\n"
"  * `tag name`: Search the element by Tag name.\n"
"  * `xpath`: Search the element by XPath selector."
msgstr ""
"  * `css selector`: CSSセレクターを使って要素を検索します。\n"
"  * `link text`: Link text selectorを使って要素を検索します。\n"
"  * `partical link text`: Partical link text selectorを使って要素を検索します。\n"
"  * `tag name`: Tag名を使って要素を検索します。\n"
"  * `xpath`: XPath使って要素を検索します。"

msgid "`finder`: Specify search the keyword."
msgstr "`finder`: 検索キーワードを指定します。"

msgid "It returns the element as [`web-driver.Element`][element]."
msgstr "要素を[`web-driver.Element`][element]として返却します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)"
msgstr ""

msgid ""
"  local element = session:find_element(\"css selector\", \"#p1\")\n"
"  element:save_screenshot(\"element.png\")\n"
"end)\n"
"```"
msgstr ""

msgid ""
"### `find_elements(strategy, finder) -> web-driver.ElementSet` {#find-elements"
"}"
msgstr ""

msgid "This method is find web elements by some retrieval methods."
msgstr "複数の要素をいくつかの検索方法で見つけます。"

msgid "`strategy`: Specify how to search elements. You can set the argument as below."
msgstr "`strategy`: 要素を検索する方法を指定します。引数を以下のように設定できます。"

msgid "It returns elements as [`web-driver.ElementSet`][elementset]."
msgstr "要素を[`web-driver.ElementSet`][elementset]として返します。"

msgid ""
"  local elements = session:find_elements(\"css selector\", 'p')\n"
"  for _,v in pairs(elements:texts()) do\n"
"    print(v)\n"
"-- Hello 1\n"
"-- Hello 2\n"
"-- Hello 3\n"
"  end\n"
"end)\n"
"```"
msgstr ""

msgid "### `active_element() -> web-driver.Element` {#active-element}"
msgstr ""

msgid ""
"This method gets the active element in the current website as [`web-driver.Ele"
"ment`][element]."
msgstr "現在のWebサイトでアクティブな要素を[`web-driver.Element`][element]として返します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local text_form = session:active_element()\n"
"  text_form:send_keys(\"This is test\")\n"
"  print(text_form[1].value)\n"
"  -- This is test\n"
"end)"
msgstr ""

msgid "```"
msgstr ""

msgid "### `xml() -> string` {#xml}"
msgstr ""

msgid ""
"It returns a current website's source as XML.\n"
"You can use this XML as Lua's string."
msgstr "現在のWebサイトのソースをXMLとして返します。このXMLはLuaの文字列として使えます。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local xml = session:xml()\n"
"  print(xml)\n"
"end)\n"
"```"
msgstr ""

msgid ""
"### `execute_script(script, args) -> the return value of given script` {#execu"
"te-script}"
msgstr ""

msgid ""
"This method executes specify your java script.\n"
"It returns the return value of the given script."
msgstr "指定したJavascriptを実行します。与えられたスクリプトの戻り値を返します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local script = [[return 1]]\n"
"  print(session:execute_script(script))\n"
"  -- 1\n"
"end)\n"
"```"
msgstr ""

msgid "### `execute_script_async(script, args) -> ` {#execute-script-async}"
msgstr ""

msgid ""
"This method executes specify your java script as an asynchronous script.\n"
"It returns the return value of the given script."
msgstr "指定したJavascriptを非同期なスクリプトとして実行します。与えられたスクリプトの戻り値を返します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local script = [[return 1]]\n"
"  print(session:execute_script_async(script))\n"
"  -- 1\n"
"end)\n"
"```"
msgstr ""

msgid "### `all_cookies() -> table` {#all-cookies}"
msgstr ""

msgid "This method gets all cookies in the current website."
msgstr "現在のWebサイトの全てのクッキーを取得します。"

msgid ""
"local URL =\n"
"  \"https://clear-code.gitlab.io/lua-web-driver/sample/cookie.html\""
msgstr ""

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local cookies = session:all_cookies()\n"
"  print(cookies[1].name, cookies[1].value)\n"
"  -- data1  123\n"
"  print(cookies[2].name, cookies[2].value)\n"
"  -- data2  456\n"
"end)\n"
"```"
msgstr ""

msgid "### `get_cookie(name) -> table` {#get-cookie}"
msgstr ""

msgid "This method gets specify cookie."
msgstr "指定したクッキーを取得します。"

msgid "`name`: Specify the name of a cookie to add as a string."
msgstr "`name`: 取得したいクッキーの名前を文字列で指定します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local cookie = session:get_cookie(\"data1\")\n"
"  print(cookie.name, cookie.value)\n"
"  -- data1  123\n"
"end)\n"
"```"
msgstr ""

msgid "### `add_cookie(cookie) -> nil` {#add-cookie}"
msgstr ""

msgid "`cookie`: Specify a cookie to add as a table."
msgstr "`cookie`: 追加するクッキーをテーブルとして指定します。"

msgid "This method adds a specify cookie in the current website."
msgstr "現在のWebサイトへ指定したクッキーを追加します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local cookies = session:all_cookies()\n"
"  print(#cookies)\n"
"  -- 2\n"
"  local cookie = {\n"
"    name = \"data3\",\n"
"    value = \"789\",\n"
"  }\n"
"  session:add_cookie(cookie)\n"
"  cookies = session:all_cookies()\n"
"  print(#cookies)\n"
"  -- 3\n"
"  print(cookies[3].name, cookies[3].value)\n"
"  -- data3  789\n"
"end)\n"
"```"
msgstr ""

msgid "### `delete_cookie(name) -> nil` {#delete-cookie}"
msgstr ""

msgid "`name`: Specify the name of a cookie to delete as a string."
msgstr "`name`: 削除するクッキーの名前を文字列として指定します。"

msgid "This method deletes a specify cookie from the current website."
msgstr "指定したクッキーを現在のWebサイトから削除します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local cookies = session:all_cookies()\n"
"  print(#cookies)\n"
"  -- 2\n"
"  session:delete_cookie(\"data1\")\n"
"  cookies = session:all_cookies()\n"
"  print(#cookies)\n"
"  -- 1\n"
"  print(cookies[1].name, cookies[1].value)\n"
"  -- data2  456\n"
"end)\n"
"```"
msgstr ""

msgid "### `delete_all_cookies() -> nil` {#delete-all-cookies}"
msgstr ""

msgid "This method delete all cookies in the current website."
msgstr "現在のWebサイトの全てのクッキーを削除します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local cookies = session:all_cookies()\n"
"  print(#cookies)\n"
"  -- 2\n"
"  session:delete_all_cookies(\"data1\")\n"
"  cookies = session:all_cookies()\n"
"  print(#cookies)\n"
"  -- 0\n"
"end)\n"
"```"
msgstr ""

msgid "### `dismiss_alert() -> nil` {#dismiss-alert}"
msgstr ""

msgid "This method push \"Cancel\" button on the current dialog."
msgstr "現在のダイアログの\"Cancel\"ボタンを押下します。"

msgid ""
"local URL =\n"
"  \"https://clear-code.gitlab.io/lua-web-driver/sample/confirm.html\""
msgstr ""

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local element = session:find_element(\"css selector\", \"#button\")\n"
"  element:click()\n"
"  session:dismiss_alert()\n"
"  element = session:find_element(\"css selector\", \"#confirm\")\n"
"  print(element:text())\n"
"  -- Dismiss!\n"
"end)\n"
"```"
msgstr ""

msgid "### `accept_alert() -> void` {#accept-alert}"
msgstr ""

msgid "This method push \"OK\" button on the current dialog."
msgstr "現在のダイアログの\"OK\"ボタンを押下します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local element = session:find_element(\"css selector\", \"#button\")\n"
"  element:click()\n"
"  session:accept_alert()\n"
"  element = session:find_element(\"css selector\", \"#confirm\")\n"
"  print(element:text())\n"
"  -- Accept!\n"
"end)\n"
"```"
msgstr ""

msgid "### `alert_text() -> string` {#alert-text}"
msgstr ""

msgid "This method gets text on the current dialog."
msgstr "現在のダイアログのテキストを取得します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local element = session:find_element(\"css selector\", \"#button\")\n"
"  element:click()\n"
"  print(session:alert_text())\n"
"  -- ok?\n"
"end)\n"
"```"
msgstr ""

msgid "### `set_alert_text(text) -> void` {#set-alert-text}"
msgstr ""

msgid "This method sets specify text on the current dialog"
msgstr "現在のダイアログに指定したテキストを設定します。"

msgid "`text`: Specify the text of a dialog as a string."
msgstr "`text`: ダイアログにのテキストを文字列として指定します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  local element = session:find_element(\"css selector\", \"#button\")\n"
"  element:click()\n"
"  print(session:alert_text())\n"
"  -- ok?\n"
"  session:set_alert_text(\"setting text\")\n"
"  print(session:alert_text())\n"
"  -- setting text\n"
"end)\n"
"```"
msgstr ""

msgid "### `take_screenshot() -> string` {#take-screenshot}"
msgstr ""

msgid ""
"It returns the screenshot of the current website as a string(this is a png for"
"mat data)."
msgstr "現在のWebサイトのスクリーンショットを文字列(PNG形式のデータ)として返します。"

msgid ""
"  local png = element:take_screenshot()\n"
"end)"
msgstr ""

msgid "### `save_screenshot(filename) -> void` {#save-screenshot}"
msgstr ""

msgid ""
"This method saves in the specific file the screenshot of the current website a"
"s PNG format."
msgstr "現在のWebサイトのスクリーンショットをPNG形式で指定したファイルに保存します。"

msgid ""
"driver:start_session(function(session)\n"
"  session:navigate_to(URL)\n"
"  session:save_screenshot(\"sample.png\")\n"
"end)"
msgstr ""

msgid "## See also"
msgstr "## 参照"

msgid ""
"  * [`web-driver.Searchable`][searchable]: Provides element search related met"
"hods."
msgstr "  * [`web-driver.Searchable`][searchable]: 要素検索関連のメソッドを提供します。"

msgid "  * [`web-driver.ElementSet`][elementset]: The class for multiple elements."
msgstr "  * [`web-driver.ElementSet`][elementset]: 複数の要素を扱うクラスです。"

msgid "[searchable]:searchable.html"
msgstr ""

msgid "[elementset]:elementset.html"
msgstr ""

msgid "[element]:element.html"
msgstr ""
